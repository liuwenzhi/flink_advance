73到86课
关于时间语义，水位线，水位线在窗口中的使用相关代码


内置watermark的生成原理
1、都是周期性生成的：默认200ms
2、有序流：watermark = 当前最大的事件时间 - 1ms
3、乱序流：watermark = 当前最大的事件时间 - 延迟时间 - 1ms


80课自定义周期性水位线，81课自定义断点式水位线，应用比较少未整理代码。后边有需要再看下

82课水位线传递测试代码，在WatermarkOutOfOrdernessDemo类中设置了并行度为2
输入数据是：
s1,1,1
s1,5,5
s1,13,13
s1,14,14
s1,23,23
s1,24,24
输出结果是：
数据=WaterSensor(id=s1, ts=1, vc=1)，recordTs=-9223372036854775808
数据=WaterSensor(id=s1, ts=5, vc=5)，recordTs=-9223372036854775808
数据=WaterSensor(id=s1, ts=13, vc=13)，recordTs=-9223372036854775808
数据=WaterSensor(id=s1, ts=14, vc=14)，recordTs=-9223372036854775808
2> key=s1的窗口开始时间：1970-01-01 08:00:00.000，窗口结束时间：1970-01-01 08:00:10.000，数据总量：2，数据信息：[WaterSensor(id=s1, ts=1, vc=1), WaterSensor(id=s1, ts=5, vc=5)]
数据=WaterSensor(id=s1, ts=23, vc=23)，recordTs=-9223372036854775808
数据=WaterSensor(id=s1, ts=24, vc=24)，recordTs=-9223372036854775808
2> key=s1的窗口开始时间：1970-01-01 08:00:10.000，窗口结束时间：1970-01-01 08:00:20.000，数据总量：2，数据信息：[WaterSensor(id=s1, ts=13, vc=13), WaterSensor(id=s1, ts=14, vc=14)]

有一个现象，之前设置单并行度的时候，输入s1,13,13这条记录就会输出窗口了，具体原因是s1,1,1这条记录来了之后，创建了[0,10)这个窗口，接下来s1,5,5也是进入这个窗口，13来的时候，13-3=10，正好到了窗口的边界。打印窗口函数
现在设置了双并行度，process算子知道之前的map算子有两个，s1,1,1这条记录来了之后，创建了[0,10)这个窗口，接下来s1,5,5来了，process算子会比较这两条数据的水位记录，取小的还是1
然后s1,13,13来的时候，比较两个算子的水位线，取小的5，所以没到关窗时间，之后s1,14,14来了，比较13和14，取小的13，13-3=10，到了关窗时间，后边23和24两条记录也一样。
总结两个点：多并行度下，接收到上游多条数据，取水位最小值；往下游多个发送，广播数据。

多并行度下水位线传递会导致的问题：多个上游算子中，有一个算子一直没有收到数据，或者收到很少的数据，它广播的水位线一直是一个很小的值，这种时候会导致下游算子一直取最小值，然后窗口关闭不了。